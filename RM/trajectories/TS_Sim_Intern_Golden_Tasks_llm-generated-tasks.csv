Task Query,Type,What do we want to check?,Codebase filepath,DB Table,Could be approach,How will it help in answering the task?
Which parts of the candidate generation pipeline consistently surface poor results?,Diagnostic Analytics,Isolate quality regressions in candidate generation for specific intents like 'sushi open late'.,"terrarium-ddsh/search_service:app/search/candidate_generation.py, terrarium-ddsh/rerankers-api:training/data_proc.py","ts-sim.sim.public.recommendation_items_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.recommendations_log,ts-ddsh.ts_ddsh.public.users,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.menu_items",Group query types by observed performance and identify patterns in item characteristics returned.,It helps us isolate quality regressions in generation for specific intents (e.g. “sushi open late”).
Some query types seem to consistently lead to user frustration and abandonment. Can we isolate and analyze these?,Cluster-Driven Diagnostic Analytics,Cluster sessions by query and user outcome to see what groups are associated with higher drop-off.,"terrarium-ddsh/rerankers-api:training/data_proc.py, terrarium-ddsh/rerankers-api:shared/feature_engineering.py, terrarium-ddsh/rerankers-api:training/evaluate.py, terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb","ts-sim.sim.public.impression_log,ts-sim.sim.public.session_log,ts-sim.sim.public.recommendation_items_log,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-ddsh.ts_ddsh.public.users,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.menu_items",Cluster sessions by query and user outcome to see what groups are associated with higher drop-off.,It reveals whether specific kinds of queries or cohorts are driving poor experience and need focused redesign or ranking fixes.
Does showing a relevant result at the top influence user behavior throughout the session?,Behavioral Analysis,Compare session paths where initial top item was clicked versus not.,"terrarium-ddsh/rerankers-api:training/data_proc.py, terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb","ts-sim.sim.public.impression_log,ts-sim.sim.public.action_results_log,ts-sim.sim.public.session_log,ts-sim.sim.public.recommendation_items_log,ts-ddsh.ts_ddsh.public.users,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.menu_items",Compare session paths where initial top item was clicked versus not.,"It provides evidence for whether early success sets the tone for later engagement, and whether rank order is respected."
Are we showing too many irrelevant options in the long tail of recommendations?,Performance Metrics,Quantify how often users take action beyond top-k ranks and what the quality looks like there.,"terrarium-ddsh/rerankers-api:training/evaluate.py, terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb","ts-sim.sim.public.recommendation_items_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.recommendations_log,ts-ddsh.ts_ddsh.public.users,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.menu_items",Quantify how often users take action beyond top-k ranks and what the quality looks like there.,Helps detect if we're over-generating or polluting the candidate pool with low-signal items.
Which demographic segments struggle most with the current recommendation setup?,Segmentation Analysis,"Slice session success rates by user attributes like persona, tech-savviness, or age.","terrarium-ddsh/rerankers-api:training/data_proc.py, terrarium-ddsh/rerankers-api:shared/feature_engineering.py, terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb","ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.session_log,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.menu_items","Slice session success rates by user attributes like persona, tech-savviness, or age.",Gives insights into accessibility and coverage gaps across user cohorts.
"Our overall CTR dropped by 2% this week. Is this just noise, or is there a specific type of user or query that's suddenly performing worse?",Diagnostic Analytics,Cluster user sessions from this week and last week to identify low-performing sessions.,"terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb, terrarium-ddsh/rerankers-api:shared/feature_engineering.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.ActionResultsLog,ts-sim.sim.public.RecommendationsLog,ts-sim.sim.public.SessionLog,ts-sim.sim.public.recommendations_log",Cluster-Driven Diagnostic Analytics,"By clustering user sessions from this week and last week, we can identify if a new cluster of low-performing sessions has emerged or if an existing cluster has grown, pointing directly to the root cause of the CTR drop."
We're seeing a lot of users abandon their session after just one search. Can we automatically identify and categorize the types of searches that lead to these 'zero-click' sessions?,Cluster-Driven Diagnostic Analytics,"Group zero-click sessions by features like query type, user demographics, time of day.","terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb, terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.ActionResultsLog,ts-sim.sim.public.RecommendationsLog,ts-sim.sim.public.SessionLog,ts-sim.sim.public.recommendations_log",Cluster-Driven Diagnostic Analytics,"This approach will group all zero-click sessions into distinct categories based on features like query type, user demographics, and time of day, allowing us to see if, for example, 'vague, single-word queries from new users' is the biggest problem segment."
Some users search and browse a lot but never convert. What’s different about them?,Behavioral Comparison,Compare high-engagement low-conversion users against normal converters.,"terrarium-ddsh/rerankers-api:training/data_proc.py, terrarium-ddsh/rerankers-api:training/evaluate.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.session_log",Compare high-engagement low-conversion users against normal converters.,Identifies what factors correlate with 'window shopping' behavior.
"When we promote restaurants in downtown, do nearby restaurants suffer? We need to understand these ripple effects.",Causal Inference,Quantify spillover effects between geographically proximate restaurants.,"terrarium-ddsh/search_service:app/routers/restaurants.py, terrarium-ddsh/search_service:app/models.py, terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.impression_log,ts-sim.sim.public.orders",Network-Interference Cluster Randomisation with spatial analysis,Quantifies spillover effects between geographically proximate restaurants.
How long should we run our search algorithm experiments before we can confidently pick a winner?,Experimental Design,Determine optimal stopping time while maintaining statistical validity.,"terrarium-ddsh/rerankers-api:training/evaluate.py, terrarium-ddsh/rerankers-api:training/metrics.py, terrarium-ddsh/search_service:app/search/service.py","ts-sim.sim.public.action_results_log,ts-sim.sim.public.session_metrics_log,ts-sim.sim.public.system_runs_log",Sequential testing with Alpha-Spending (Pocock/O'Brien-Fleming boundaries),Determines optimal stopping time while maintaining statistical validity.
"Are users actually price sensitive, or is something else driving their choices? We see correlations but need the real story.",Causal Inference,Isolate true causal effect of price on demand.,"terrarium-ddsh/search_service:app/routers/menu_items.py, terrarium-ddsh/rerankers-api:training/data_proc.py, terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders",Instrumental Variable (2SLS) using delivery radius or promo eligibility,"Isolates true causal effect of price on demand, removing endogeneity bias."
Some user types seem to love our personalized recommendations while others ignore them. Can we figure out who benefits most?,Heterogeneous Effects,Identify which user personas gain the most value from personalization.,"terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/search_service:app/routers/users.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Heterogeneous Treatment Effect (HTE) Estimation using Causal Forests,"Identifies which user personas gain the most value from personalization, enabling targeted rollout."
That Italian restaurant started a big promotion last month. Did it actually increase their sales or just shift orders around?,Causal Impact,Create artificial control group from similar restaurants to estimate true promotional lift.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log,ts-sim.sim.public.session_log",Synthetic Control method to construct counterfactual,Creates artificial control group from similar restaurants to estimate true promotional lift.
"We rolled out the new ranking algorithm last week, but how do we know if it's actually better than the old one?",Post-Rollout Evaluation,Enable confident decision-making with minimal sample size while controlling false positive rates.,"terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:training/metrics.py","ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendation_items_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_metrics_log",Sequential & Alpha-Spending Tests (SPRT) for early stopping with controlled error rates,Enables confident decision-making with minimal sample size while controlling false positive rates.
"What's the optimal discount to offer for a weekend promotion to maximize revenue, not just the number of orders?",Pricing Optimization,Model the relationship between discount amount and order probability to find optimal discount.,terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb,"ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log",Analytic Price-Elasticity Optimisation with constraints,"By modeling the relationship between discount amount and order probability (demand curve), we can often find a closed-form solution for the discount that maximizes total revenue (`price * quantity`)."
How confident can we be that our new reranker is actually causing the conversion improvements we're seeing?,Causal Robustness,Quantify robustness of causal claims to unobserved confounding.,"terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/metrics.py","ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_metrics_log",Sensitivity Analysis using Rosenbaum Bounds and E-Values,Quantifies robustness of causal claims to unobserved confounding.
Do promotions work differently for Mexican restaurants versus Chinese restaurants? We need to know where to focus.,Heterogeneous Effects,Identify heterogeneous promotional effectiveness across restaurant categories.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log",Conditional Average Treatment Effect (CATE) estimation by cuisine type,Identifies heterogeneous promotional effectiveness across restaurant categories.
We have thousands of features from user profiles and search history. How do we figure out what actually drives conversions?,Feature Importance,Handle feature selection and causal estimation simultaneously without bias.,"terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/search_service:app/search/reranking.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.agent_conversation_log,ts-sim.sim.public.session_log",Double/Debiased Machine Learning for high-dimensional confounders,Handles feature selection and causal estimation simultaneously without bias.
Our API got slower last Tuesday. Did it actually hurt business or are we overreacting?,Causal Impact,Estimate business impact of infrastructure issues using synthetic control.,"terrarium-ddsh/search_service:app/main.py,terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/search_service:app/search/service.py","ts-sim.sim.public.api_call_log,ts-sim.sim.public.llm_performance_log,ts-sim.sim.public.orders,ts-sim.sim.public.session_metrics_log",Bayesian Structural Time-Series for causal impact analysis,Estimates business impact of infrastructure issues using synthetic control.
Does our lunch-time traffic behave differently than dinner traffic when it comes to search?,Temporal Analysis,Identify time-varying effects on search behavior and conversion.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.session_log",Heterogeneous Treatment Effect estimation by time of day,Identifies time-varying effects on search behavior and conversion.
Multiple teams claim credit for this quarter's revenue increase. How do we fairly split the credit?,Attribution Modeling,Fairly allocate contribution across multiple concurrent improvements.,"terrarium-ddsh/rerankers-api:training/metrics.py,terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/evaluate.py","ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.session_metrics_log,ts-sim.sim.public.system_runs_log",Attribution-Adjusted Metrics via Shapley Value Decomposition,Fairly allocates contribution across multiple concurrent improvements.
"As delivery radius increases, how does order volume change? Is it linear or more complex?",Dose-Response Analysis,Reveal non-linear dose-response relationship between delivery area and demand.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",Continuous treatment effect estimation with flexible functional forms,Reveals non-linear dose-response relationship between delivery area and demand.
Users who click on restaurants don't always order. What's happening in between and how do we fix it?,Funnel Analysis,Identify intermediate factors affecting the click-to-order conversion funnel.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/menu_items.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.session_log,ts-sim.sim.public.turn_context_log",Mediation analysis to decompose direct and indirect effects,Identifies intermediate factors affecting the click-to-order conversion funnel.
We're rolling out features to different cities at different times. How do we measure the true impact?,Causal Inference,Handle time-varying treatment adoption across geographic units.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.session_metrics_log,ts-sim.sim.public.session_log,ts-sim.sim.public.system_runs_log",Synthetic Difference-in-Differences for staggered rollouts,Handles time-varying treatment adoption across geographic units.
"Looking at our search logs, what actually causes what? We see patterns but need causal relationships.",Causal Inference,Identify predictive causality between different user behaviors.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.event_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Granger Causality testing on time series data,Identifies predictive causality between different user behaviors.
"Most searches work fine, but some take forever. What's happening with those slow ones?",Performance Diagnostics,Identify and characterize tail latency issues affecting user experience.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py,terrarium-ddsh/rerankers-api:deployment/main.py","ts-sim.sim.public.api_call_log,ts-sim.sim.public.llm_performance_log,ts-sim.sim.public.session_metrics_log",Quantile (p-τ) Metrics focusing on p95/p99 latency,Identifies and characterizes tail latency issues affecting user experience.
"Are we showing fair results to all types of users, or is our algorithm biased?",Fairness Audit,Quantify algorithmic bias and ensure equitable treatment.,"terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/search_service:app/routers/users.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.recommendations_log","Fairness Diagnostics (ΔDP, ΔEO) across user demographics",Quantifies algorithmic bias and ensures equitable treatment.
Can we give confidence scores with our recommendations instead of just rankings?,Uncertainty Estimation,Provide calibrated confidence intervals for ranking scores.,"terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/search_service:app/search/reranking.py","ts-sim.sim.public.recommendation_items_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_metrics_log",Conformal Prediction Sets for distribution-free uncertainty,Provides calibrated confidence intervals for ranking scores.
Users complain about seeing the same restaurants repeatedly. How do we measure variety?,Diversity Metrics,Quantify result diversity beyond simple deduplication.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:training/metrics.py,terrarium-ddsh/search_service:app/search/candidate_generation.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.impression_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Diversity metrics using Determinantal Point Processes,Quantifies result diversity beyond simple deduplication.
Restaurants at the top always have more clicks. How do we factor this out when measuring quality?,Bias Correction,Debias click metrics to reveal true relevance preferences.,"terrarium-ddsh/rerankers-api:training/metrics.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/reranking.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.recommendations_log",Position bias correction using examination hypothesis,Debiases click metrics to reveal true relevance preferences.
Can we predict which users will become loyal customers versus one-time visitors?,Churn Prediction,Model user lifetime and churn probability dynamically.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/db/crud/user.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.session_log,ts-sim.sim.public.user_session_cache",Survival analysis with time-varying covariates,Models user lifetime and churn probability dynamically.
"Should we show more restaurants to users, or focus on showing the best ones?",Trade-off Analysis,Identify optimal trade-off between catalog exposure and relevance.,"terrarium-ddsh/search_service:app/search/candidate_generation.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log",Pareto frontier analysis of coverage vs accuracy,Identifies optimal trade-off between catalog exposure and relevance.
How much better is personalized search compared to generic search for different users?,Personalization Evaluation,Quantify incremental value of personalization per user segment.,"terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/reranking.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_metrics_log",Personalization lift metrics with counterfactual estimation,Quantifies incremental value of personalization per user segment.
"Popular restaurants do well, but what about the hidden gems? How are we performing there?",Long-Tail Analysis,Separately evaluate algorithm performance on popular vs rare items.,"terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:training/metrics.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.impression_log",Long-tail performance analysis with stratified metrics,Separately evaluates algorithm performance on popular vs rare items.
How should we experiment with menu prices without losing too much money in the process?,Experimental Design,Balance exploration and exploitation to minimize revenue loss during testing.,"terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/rerankers-api:training/hpo.py,terrarium-ddsh/search_service:app/db/crud/menu_item.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log",Bayesian Thompson-Sampling for adaptive pricing experiments,Balances exploration and exploitation to minimize revenue loss during testing.
"Delivery fees are tricky - too high and we lose orders, too low and we lose money. What's optimal?",Dynamic Pricing,Learn optimal pricing policy considering both demand and profitability.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",Reinforcement Learning for dynamic pricing with constraints,Learns optimal pricing policy considering both demand and profitability.
Can we charge different prices to different customer segments without being unfair?,Price Segmentation,Identify fair price segments based on willingness to pay.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/search_service:app/db/crud/user.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders",Causal Forests for price discrimination analysis,Identifies fair price segments based on willingness to pay.
Price sensitivity seems to vary by cuisine type and customer type. Can we quantify this?,Elasticity Analysis,Quantify price sensitivity across customer-cuisine segments.,"terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/users.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders",Heterogeneous elasticity estimation using interaction effects,Quantifies price sensitivity across customer-cuisine segments.
How do our restaurant prices compare to competitors in the same area?,Competitive Analysis,Benchmark pricing relative to geographic competitors.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/search_service:app/models.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state",Competitive pricing intelligence with spatial analysis,Benchmarks pricing relative to geographic competitors.
"Some users will buy regardless of discounts, others only buy with discounts. How do we identify them?",Uplift Modeling,Identify users with high promotional lift vs baseline purchasers.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log,ts-sim.sim.public.user_promo_cache",Uplift modeling for discount sensitivity,Identifies users with high promotional lift vs baseline purchasers.
"When users don't buy item A, what do they buy instead? This affects our pricing strategy.",Substitution Analysis,Reveal substitution patterns crucial for pricing decisions.,"terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.recommendation_items_log",Cross-price elasticity matrix estimation,Reveals substitution patterns crucial for pricing decisions.
When is the best time to run promotions - and does it differ by restaurant type?,Temporal Optimization,Identify optimal promotion timing by restaurant characteristics.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log",Causal inference on temporal patterns with heterogeneity,Identifies optimal promotion timing by restaurant characteristics.
Which items are frequently bought together? This could inform our combo deals.,Association Analysis,Discover item associations for bundle creation.,"terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/search_service:app/db/crud/menu_item.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders",Market basket analysis with lift metrics,Discovers item associations for bundle creation.
What are users really willing to pay for different items? Current prices might not reflect this.,WTP Estimation,Infer true WTP distributions from observed purchase behavior.,"terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.impression_log,ts-sim.sim.public.orders",Willingness-to-pay estimation from choice data,Infers true WTP distributions from observed purchase behavior.
New menu items have no history. How do we price them intelligently from day one?,Cold-Start Pricing,Leverage similarity to existing items for intelligent initial pricing.,"terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/search_service:app/db/crud/menu_item.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders",Multi-Armed Bandits with prior information from similar items,Leverages similarity to existing items for intelligent initial pricing.
"Users search in weird ways - misspellings, slang, etc. How do we understand what they really want?",Query Understanding,Map messy user queries to canonical intents and entities.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/search_service:app/search/candidate_generation.py,terrarium-ddsh/rerankers-api:shared/feature_engineering.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.agent_conversation_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Query understanding with transformer-based intent classification,Maps messy user queries to canonical intents and entities.
Good Italian food' means different things to different people. How do we capture these nuances?,Semantic Personalization,Learn user-specific interpretations of subjective queries.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/search_service:app/routers/users.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.reviews",Personalized semantic embeddings with user context,Learns user-specific interpretations of subjective queries.
"When users search for 'pasta', should we also show 'spaghetti' and 'ravioli' results?",Query Expansion,Automatically expand queries to related terms based on culinary ontology.,"terrarium-ddsh/search_service:app/search/candidate_generation.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py,terrarium-ddsh/search_service:app/routers/menu_items.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendation_items_log",Query expansion using knowledge graphs,Automatically expands queries to related terms based on culinary ontology.
Users make typos constantly. How forgiving should our search be?,Fuzzy Matching,Balance typo tolerance with precision based on query context.,"terrarium-ddsh/search_service:app/search/candidate_generation.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendations_log",Edit-distance based fuzzy matching with adaptive thresholds,Balances typo tolerance with precision based on query context.
"Some users care about price, others about ratings, others about distance. How do we balance all of this?",Multi-Objective Ranking,Learn personalized weight combinations for different ranking factors.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/rerankers-api:deployment/main.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.session_log",Multi-objective ranking optimization with user preferences,Learns personalized weight combinations for different ranking factors.
Our current ranking feels outdated. What features should we consider to modernize it?,Feature Engineering,Identify high-value features for ranking improvement.,"terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/rerankers-api:training/evaluate.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendation_items_log,ts-sim.sim.public.session_log",Feature importance analysis with XGBoost,Identifies high-value features for ranking improvement.
Should we stick with our current ranking approach or try something completely different?,Model Comparison,Empirically compare different ranking paradigms.,"terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/rerankers-api:deployment/main.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendation_items_log,ts-sim.sim.public.session_metrics_log",Model comparison between XGBoost and neural architectures,Empirically compares different ranking paradigms.
The interaction between search terms and restaurant descriptions seems important. How do we capture it?,Semantic Matching,Model fine-grained semantic matching between queries and items.,"terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:training/train.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendations_log",Cross-attention features between queries and documents,Models fine-grained semantic matching between queries and items.
Can we predict what users will search for next based on their history?,Sequential Modeling,Enable proactive suggestions and result pre-fetching.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/users.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.agent_conversation_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log,ts-sim.sim.public.user_session_cache",Sequential modeling of search sessions,Enables proactive suggestions and result pre-fetching.
New cuisine types pop up (Korean-Mexican fusion?). How do we handle things we've never seen?,Zero-Shot Learning,Handle new categories without retraining using compositional understanding.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendations_log",Zero-shot learning with semantic similarity,Handles new categories without retraining using compositional understanding.
We're getting searches in Spanish and other languages. Our system only knows English. Help!,Multilingual Support,Enable search in multiple languages without separate models.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.agent_conversation_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Multilingual embeddings with cross-lingual transfer,Enables search in multiple languages without separate models.
Voice searches are different from typed searches. Should we rank results differently?,Multi-Modal Ranking,Adapt ranking based on input modality characteristics.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:training/train.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Multi-modal ranking with query type features,Adapts ranking based on input modality characteristics.
Should breakfast search results be different from dinner search results? What about weather?,Contextual Reranking,Incorporate real-time context for more relevant results.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.session_log,ts-sim.sim.public.session_selection",Contextual reranking with temporal and environmental features,Incorporates real-time context for more relevant results.
"Users want to know WHY we recommended something, not just see the recommendation.",Interpretability,Generate human-readable explanations for each recommendation.,"terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/reranking.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendation_items_log",Interpretable ranking with feature attribution,Generates human-readable explanations for each recommendation.
We need to improve our search but have limited labeled data. What's the most efficient approach?,Active Learning,Identify most informative examples for human annotation.,"terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Active learning for relevance labeling,Identifies most informative examples for human annotation.
Search patterns seem to be changing recently. Is this real or just normal variation?,Drift Detection,Distinguish true distribution shifts from random fluctuations.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log,ts-sim.sim.public.system_runs_log",Concept-Drift Detection using ADWIN or Kolmogorov tests,Distinguishes true distribution shifts from random fluctuations.
Some restaurants' order volumes are way off their usual patterns. What's happening?,Anomaly Detection,Identify unusual restaurant performance requiring investigation.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log",Anomaly detection using Isolation Forest on multivariate patterns,Identifies unusual restaurant performance requiring investigation.
We occasionally see extreme spikes in prices or ratings. How do we handle these outliers?,Outlier Modeling,Properly model and handle rare extreme events.,"terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.reviews",Extreme Value Theory for tail modeling,Properly models and handles rare extreme events.
User preferences shifted suddenly last month. Can we detect these changes automatically?,Change Detection,Automatically identify when user behavior patterns change.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",Change point detection in time series,Automatically identifies when user behavior patterns change.
"When multiple metrics go weird at once, how do we know if it's related or coincidence?",Multivariate Analysis,Identify systemic issues vs independent anomalies.,"terrarium-ddsh/rerankers-api:training/metrics.py,terrarium-ddsh/search_service:app/main.py,terrarium-ddsh/rerankers-api:deployment/main.py","ts-sim.sim.public.api_call_log,ts-sim.sim.public.llm_performance_log,ts-sim.sim.public.session_metrics_log,ts-sim.sim.public.system_runs_log",Multivariate anomaly detection with correlation analysis,Identifies systemic issues vs independent anomalies.
"Our metrics have weekly patterns, seasonal trends, and random noise. How do we separate them?",Time Series Decomposition,"Isolate trend, seasonal, and residual components for analysis.","terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/metrics.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log,ts-sim.sim.public.session_log",Seasonal decomposition of time series (STL),"Isolates trend, seasonal, and residual components for analysis."
Can we catch search quality problems immediately instead of waiting for user complaints?,Real-Time Monitoring,Enable proactive quality monitoring and rapid response.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/metrics.py","ts-sim.sim.public.api_call_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_metrics_log",Real-time streaming anomaly detection,Enables proactive quality monitoring and rapid response.
Some reviews look fake - too many 5-stars in a short time. How do we catch this?,Fraud Detection,Identify suspicious review activity for investigation.,"terrarium-ddsh/search_service:app/models.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/restaurants.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.reviews",Unsupervised fraud detection on review patterns,Identifies suspicious review activity for investigation.
"When the system slows down, which metrics should we check first to find the problem?",Root Cause Analysis,Prioritize diagnostic metrics by predictive power.,"terrarium-ddsh/search_service:app/main.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py,terrarium-ddsh/rerankers-api:deployment/main.py","ts-sim.sim.public.api_call_log,ts-sim.sim.public.llm_performance_log,ts-sim.sim.public.session_metrics_log,ts-sim.sim.public.system_runs_log",Correlation analysis for root cause identification,Prioritizes diagnostic metrics by predictive power.
"We have power users, casual users, and everything in between. Are there hidden user types we're missing?",User Segmentation,Discover natural user segments with targeted strategies.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/db/crud/user.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",User behavior clustering with validation,Discovers natural user segments with similar demand characteristics for targeted strategies.
Some users seem to be gaming our promotional system. How do we identify them?,Fraud Detection,Flag users exploiting promotions beyond intended use.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/search_service:app/models.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log,ts-sim.sim.public.user_promo_cache",Behavioral pattern analysis for abuse detection,Flags users exploiting promotions beyond intended use.
Restaurant data updates sometimes have errors. Can we catch these before they affect users?,Data Quality Monitoring,Prevent bad data from reaching production systems.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py,terrarium-ddsh/search_service:app/es_utils/elasticsearch_client.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state",Data quality monitoring with validation rules,Prevents bad data from reaching production systems.
How many servers will we need for next month's expected traffic?,Capacity Planning,Predict capacity needs based on growth patterns.,"terrarium-ddsh/search_service:app/main.py,terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/search_service:app/search/service.py","ts-sim.sim.public.api_call_log,ts-sim.sim.public.llm_performance_log,ts-sim.sim.public.session_log,ts-sim.sim.public.system_runs_log",Capacity planning with time series forecasting,Predicts infrastructure needs based on growth patterns.
We get hundreds of system alerts daily. Which ones actually matter for the business?,Alert Prioritization,Focus attention on alerts that affect revenue or user experience.,"terrarium-ddsh/search_service:app/main.py,terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/metrics.py","ts-sim.sim.public.api_call_log,ts-sim.sim.public.orders,ts-sim.sim.public.session_metrics_log,ts-sim.sim.public.system_runs_log",Alert prioritization by business impact,Focuses attention on alerts that affect revenue or user experience.
"When conversion drops, is it the search algorithm, the UI, or something else? We need faster diagnosis.",Root Cause Analysis,Rapidly identify source of performance degradations.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/rerankers-api:deployment/main.py","ts-sim.sim.public.action_results_log,ts-sim.sim.public.api_call_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_metrics_log",Automated root cause analysis with causal graphs,Rapidly identifies source of performance degradations.
Users who joined in January behave differently from those who joined in June. Why?,Cohort Analysis,Reveal how acquisition timing affects long-term behavior.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/db/crud/user.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",Cohort analysis with temporal features,Reveals how acquisition timing affects long-term behavior.
What's the long-term value of a user who orders Thai food versus pizza?,CLV Prediction,Enable targeted acquisition and retention strategies.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.reviews,ts-sim.sim.public.session_log",Customer lifetime value prediction by preferences,Enables targeted acquisition and retention strategies.
"Which users are about to stop using our service, and can we win them back?",Churn Prediction,Identify at-risk users and optimal retention actions.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log,ts-sim.sim.public.session_log,ts-sim.sim.public.user_session_cache",Churn prediction with intervention modeling,Identifies at-risk users and optimal retention actions.
What items do users typically order together? This could improve our suggestions.,Association Analysis,Discover item affinities for better recommendations.,"terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/search_service:app/search/service.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders",Association rule mining for menu items,Discovers item affinities for better recommendations.
"Restaurant reviews contain gold - complaints, compliments, suggestions. What are the main themes?",Text Analysis,Extract actionable insights from unstructured feedback.,"terrarium-ddsh/search_service:app/models.py,terrarium-ddsh/rerankers-api:shared/feature_engineering.py,terrarium-ddsh/search_service:app/routers/restaurants.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.reviews",Topic modeling and sentiment analysis on reviews,Extracts actionable insights from unstructured feedback.
Can we predict tomorrow's order volume for each neighborhood?,Forecasting,Enable proactive capacity management and marketing.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",Spatial-temporal demand forecasting,Enables proactive capacity management and marketing.
How do our restaurants stack up against each other in the same area?,Benchmarking,Identify relative strengths and improvement opportunities.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py,terrarium-ddsh/rerankers-api:training/metrics.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.reviews",Competitive benchmarking within geographic clusters,Identifies relative strengths and improvement opportunities.
What path do users typically take from first search to first order?,Journey Mapping,Optimize conversion funnel and identify friction points.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/routers/users.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log,ts-sim.sim.public.turn_context_log",User journey mapping with process mining,Optimizes conversion funnel and identifies friction points.
"Marketing claims they drove the revenue increase, product claims it was the new features. Who's right?",Attribution,Fairly allocate credit across multiple touchpoints.,"terrarium-ddsh/rerankers-api:training/metrics.py,terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/search_service:app/main.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.promotion_log,ts-sim.sim.public.session_log,ts-sim.sim.public.system_runs_log",Multi-touch attribution modeling,Fairly allocates credit across multiple touchpoints.
Small restaurants have limited data. Can we use information from similar restaurants to help?,Hierarchical Modeling,Improve estimates for data-sparse entities using group information.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/train.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.reviews",Bayesian Hierarchical Models for information pooling,Improves estimates for data-sparse entities using group information.
Where should we encourage new restaurants to open based on user demand?,Gap Analysis,Identify underserved areas with high potential.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",Geo-spatial gap analysis with demand modeling,Identifies underserved areas with high potential.
"Which menu items are stars, puzzles, workhorses, or dogs from a business perspective?",Menu Engineering,Classify items by profitability and popularity for strategic decisions.,"terrarium-ddsh/search_service:app/routers/menu_items.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/db/crud/menu_item.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders",Menu engineering matrix analysis,Classifies items by profitability and popularity for strategic decisions.
Is personalization actually helping our business or just making the system more complex?,Impact Analysis,Quantify true business value of personalization investment.,"terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/evaluate.py,terrarium-ddsh/search_service:app/search/reranking.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.orders,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_metrics_log",Causal impact analysis of personalization features,Quantifies true business value of personalization investment.
We think the same users use both our app and website. Can we confirm this?,User Matching,Enable unified user view for better personalization.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/db/crud/user.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.session_log,ts-sim.sim.public.user_session_cache",Probabilistic user matching across platforms,Enables unified user view for better personalization.
Some restaurants are always busy while others struggle. How do we balance this?,Optimization,Redistribute demand for better utilization and fairness.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:deployment/main.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.impression_log,ts-sim.sim.public.orders",Supply-demand matching optimization,Redistributes demand for better utilization and fairness.
Should we keep showing users their favorite restaurants or push them to try new ones?,Explore-Exploit Balance,Balance user satisfaction with discovery and diversity.,"terrarium-ddsh/search_service:app/search/reranking.py,terrarium-ddsh/rerankers-api:deployment/main.py,terrarium-ddsh/rerankers-api:training/train.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.action_results_log,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log",Exploration-exploitation optimization in recommendations,Balances user satisfaction with discovery and diversity.
Do users influence their friends' restaurant choices? This could change our growth strategy.,Network Effects,Quantify viral potential and network-based growth opportunities.,"terrarium-ddsh/search_service:app/routers/users.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/models.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.orders,ts-sim.sim.public.reviews,ts-sim.sim.public.session_log",Social network effect analysis,Quantifies viral potential and network-based growth opportunities.
Can we group restaurants by their order patterns to better understand our inventory?,Clustering,Identify restaurant segments with similar demand characteristics.,"terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/search_service:app/db/crud/restaurant.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.session_log",Time series clustering on order patterns,Identifies restaurant segments with similar demand characteristics with similar demand characteristics.
What really drives search success? We have theories but need a clear picture.,Causal Discovery,Reveal true causal relationships between factors.,"terrarium-ddsh/search_service:app/search/service.py,terrarium-ddsh/rerankers-api:training/data_proc.py,terrarium-ddsh/rerankers-api:training/evaluate.py","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.recommendations_log,ts-sim.sim.public.session_log,ts-sim.sim.public.session_metrics_log",Causal graph construction from observational data,Reveals true causal relationships between factors.
The CEO wants a dashboard showing real-time business health. What should we include and how do we calculate it?,KPI Dashboard,Provide actionable business intelligence at appropriate granularity.,"terrarium-ddsh/search_service:app/main.py,terrarium-ddsh/search_service:app/routers/restaurants.py,terrarium-ddsh/rerankers-api:training/metrics.py,terrarium-ddsh/rerankers-api:notebooks/data_proc.ipynb","ts-ddsh.ts_ddsh.public.menu_items,ts-ddsh.ts_ddsh.public.restaurants,ts-ddsh.ts_ddsh.public.users,ts-sim.sim.public.global_restaurant_state,ts-sim.sim.public.orders,ts-sim.sim.public.session_metrics_log,ts-sim.sim.public.system_runs_log",Executive KPI aggregation with drill-down capabilities,Provides actionable business intelligence at appropriate granularity.